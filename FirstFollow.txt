<PROGRAM>
First = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR}
Follow = {}

<PROGRAM_V>
First = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR, eps}
Follow = {}
			
<PROGRAM_F>
First = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR}
Follow = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR}

<FUNCTION>
First = {SUB}
Follow = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR}

<FUNCTION_ARGUMENT>
First = {LPAR, eps}
Follow = {LBRACE}

<ARGUMENT_LIST>
First = {VAR, eps}
Follow = {RPAR}

<ARGUMENT_LIST_V>
First = {COMMA, eps}
Follow = {RPAR}

<INSTRUCTION_LIST>
First = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, UNLESS, VAR}
Follow = {RBRACE}

<FUNCTION_CALL> // A REFAIRE
First = {CALL_MARK}
Follow = {NOT, PLUS, MINUS, FOLLOW_EXPRESSION}

<FUNCTION_CALL_ARGUMENT> // A REFAIRE
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR, eps}
Follow = {NOT, PLUS, MINUS, FOLLOW_EXPRESSION}

<ARGUMENT_CALL_LIST> // A REFAIRE
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR, eps}
Follow = {NOT, PLUS, MINUS, RPAR, FOLLOW_EXPRESSION}

<ARGUMENT_CALL_LIST_V> // A REFAIRE
First = {COMMA, eps}
Follow = {NOT, PLUS, MINUS, RPAR, FOLLOW_EXPRESSION}

<INSTRUCTION>
First = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, UNLESS, VAR}
Follow = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR}

<INSTRUCTION_F>
First = {IF, UNLESS, eps}
Follow = {SEMICOLON}
			
<CONDITION>
First = {IF, UNLESS}
Follow = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
			
<CONDITION_END>
First = {ELSE, ELSIF, eps}
Follow = {CALL_MARK, FLOAT, IF, INTEGER, LBRACE, LPAR, RETURN, STRING, SUB, UNLESS, VAR}

<SIMPLE_EXPRESSION> // A REFAIRE
First = {CALL_MARK, FLOAT, INTEGER, STRING, VAR}
Follow = {NOT, PLUS, MINUS, FOLLOW_EXPRESSION}

<EXPRESSION>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {COMMA, IF, LBRACE, RPAR, SEMICOLON, UNLESS}
			
<EXPRESSION_V>
First = {NOTLETTERS, eps}
Follow = {FOLLOW_EXPRESSION}

<EXPRESSION_TWO>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {NOTLETTERS, FOLLOW_EXPRESSION}

<EXPRESSION_TWO_V>
First = {ASSIGN_MARK, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_THREE>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {ASSIGN_MARK, FOLLOW_EXPRESSION}

<EXPRESSION_THREE_V>
First = {LAZY_OR, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_FOUR>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {LAZY_OR, FOLLOW_EXPRESSION}

<EXPRESSION_FOUR_V>
First = {LAZY_AND, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_FIVE>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {LAZY_AND, FOLLOW_EXPRESSION}
			
<EXPRESSION_FIVE_V>
First = {DIFFERENT, EQ, EQUALS, NE, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_FIVE_F>
First = {DIFFERENT, EQ, EQUALS, NE}
Follow = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}

<EXPRESSION_SIX>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {DIFFERENT, EQ, EQUALS, NE, FOLLOW_EXPRESSION}
			
<EXPRESSION_SIX_V>
First = {GE, GREATER, GREATER_EQUALS, GT, LE, LOWER, LOWER_EQUALS, LT, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_SIX_F>
First = {GE, GREATER, GREATER_EQUALS, GT, LE, LOWER, LOWER_EQUALS, LT}
Follow = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}

<EXPRESSION_SEVEN>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {GE, GREATER, GREATER_EQUALS, GT, LE, LOWER, LOWER_EQUALS, LT, FOLLOW_EXPRESSION}
			
<EXPRESSION_SEVEN_V>
First = {PLUS, MINUS, CONCAT_MARK, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_SEVEN_F>
First = {PLUS, MINUS, CONCAT_MARK}
Follow = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}

<EXPRESSION_EIGHT>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {PLUS, MINUS, CONCAT_MARK, FOLLOW_EXPRESSION}
			
<EXPRESSION_EIGHT_V>
First = {TIMES, DIVIDE, eps}
Follow = {FOLLOW_EXPRESSION}
			
<EXPRESSION_EIGHT_F>
First = {TIMES, DIVIDE}
Follow = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}

<EXPRESSION_NINE>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {TIMES, DIVIDE, FOLLOW_EXPRESSION}
			
<EXPRESSION_NINE_V>
First = {NOT, PLUS, MINUS, eps}
Follow = {FOLLOW_EXPRESSION}

<EXPRESSION_NINE_F>
First = {NOT, PLUS, MINUS}
Follow = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}

<EXPRESSION_TEN>
First = {CALL_MARK, FLOAT, INTEGER, LPAR, STRING, VAR}
Follow = {NOT, PLUS, MINUS, FOLLOW_EXPRESSION}