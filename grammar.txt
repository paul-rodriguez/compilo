<PROGRAM> |=
			<PROGRAM_F> <PROGRAM_V>

<PROGRAM_V> |=
			<PROGRAM_F> <PROGRAM_V>
			| eps
			
<PROGRAM_F> |=
			<FUNCTION>
			| <INSTRUCTION>

<FUNCTION> |=
			SUB IDENTIFIER <FUNCTION_ARGUMENT> LBRACE <INSTRUCTION_LIST> RBRACE

<FUNCTION_ARGUMENT> |=
			LPAR <ARGUMENT_LIST> RPAR
			| eps

<ARGUMENT_LIST> |=
			VAR <ARGUMENT_LIST_V>
			| eps

<ARGUMENT_LIST_V> |=
			COMMA VAR <ARGUMENT_LIST_V>
			| eps

<INSTRUCTION_LIST> |=
			<INSTRUCTION> <INSTRUCTION_LIST>
			| eps

<FUNCTION_CALL> |=
			CALL_MARK IDENTIFIER LPAR <ARGUMENT_CALL_LIST> RPAR

<ARGUMENT_CALL_LIST> |=
			<EXPRESSION> <ARGUMENT_CALL_LIST_V>
			| eps

<ARGUMENT_CALL_LIST_V> |=
			COMMA <EXPRESSION> <ARGUMENT_CALL_LIST_V>
			| eps

<INSTRUCTION> |=
			<EXPRESSION> <INSTRUCTION_F> SEMICOLON
			| RETURN <EXPRESSION> <INSTRUCTION_F> SEMICOLON
			| LBRACE <INSTRUCTION_LIST> RBRACE
			| <CONDITION> <EXPRESSION> LBRACE <INSTRUCTION_LIST> RBRACE <CONDITION_END>
			
<INSTRUCTION_F> |=
			<CONDITION> <EXPRESSION>
			| eps
			
<CONDITION> |=
			IF	
			| UNLESS
			
<CONDITION_END> |=
			ELSIF <EXPRESSION> LBRACE <INSTRUCTION_LIST> RBRACE <CONDITION_END>
			| ELSE LBRACE <INSTRUCTION_LIST> RBRACE
			| eps

<SIMPLE_EXPRESSION> |=
			<FUNCTION_CALL>
			| INTEGER
			| FLOAT
			| STRING
			| VAR

<EXPRESSION> |=
			<EXPRESSION_TWO> <EXPRESSION_V>

<EXPRESSION_V> |=
			ASSIGN_MARK <EXPRESSION_TWO> <EXPRESSION_V>
			| eps
			
<EXPRESSION_TWO> |=
			<EXPRESSION_THREE> <EXPRESSION_TWO_V>

<EXPRESSION_TWO_V> |=
			LAZY_OR <EXPRESSION_THREE> <EXPRESSION_TWO_V>
			| eps

<EXPRESSION_THREE> |=
			<EXPRESSION_FOUR> <EXPRESSION_THREE_V>

<EXPRESSION_THREE_V> |=
			LAZY_AND <EXPRESSION_FOUR> <EXPRESSION_THREE_V>
			| eps
			
<EXPRESSION_FOUR> |=
			<EXPRESSION_FIVE> <EXPRESSION_FOUR_V>
			
<EXPRESSION_FOUR_V> |=
			<EXPRESSION_FOUR_F> <EXPRESSION_FIVE>
			| eps
			
<EXPRESSION_FOUR_F> |=
			DIFFERENT
			| EQ
			| EQUALS
			| NE

<EXPRESSION_FIVE> |=
			<EXPRESSION_SIX> <EXPRESSION_FIVE_V>
			
<EXPRESSION_FIVE_V> |=
			<EXPRESSION_FIVE_F> <EXPRESSION_SIX>
			| eps
			
<EXPRESSION_FIVE_F> |=
			GE
			| GREATER
			| GREATER_EQUALS
			| GT
			| LE
			| LOWER
			| LOWER_EQUALS
			| LT

<EXPRESSION_SIX> |=
			<EXPRESSION_SEVEN> <EXPRESSION_SIX_V>
			
<EXPRESSION_SIX_V> |=
			<EXPRESSION_SIX_F> <EXPRESSION_SEVEN> <EXPRESSION_SIX_V>
			| eps
			
<EXPRESSION_SIX_F> |=
			PLUS
			| MINUS
			| CONCAT_MARK

<EXPRESSION_SEVEN> |=
			<EXPRESSION_EIGHT> <EXPRESSION_SEVEN_V>
			
<EXPRESSION_SEVEN_V> |=
			<EXPRESSION_SEVEN_F> <EXPRESSION_EIGHT> <EXPRESSION_SEVEN_V>
			| eps
			
<EXPRESSION_SEVEN_F> |=
			TIMES
			| DIVIDE

<EXPRESSION_EIGHT> |=
			<EXPRESSION_NINE>
			| <EXPRESSION_EIGHT_F> <EXPRESSION_EIGHT>

<EXPRESSION_EIGHT_F> |=
			NOT
			| PLUS
			| MINUS

<EXPRESSION_NINE> |=
			LPAR <EXPRESSION> RPAR
			| <SIMPLE_EXPRESSION>
